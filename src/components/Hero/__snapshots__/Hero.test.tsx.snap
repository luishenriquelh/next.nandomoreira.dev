// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Hero /> Render component 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  font-size: 2rem;
  height: 100%;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 200px 0;
}

.c1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  max-width: 60rem;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  text-align: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0 1.875rem;
}

.c1.--centered > div {
  text-align: center;
  margin: 0;
}

.c1 h1 {
  font-weight: 600;
  font-size: 1rem;
  margin: 1.875rem 0 0.625rem;
  font-weight: 500;
  opacity: 0.8;
}

.c1 h1 a {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c1 h2 {
  font-size: 1.125rem;
}

@media (min-width:768px) {
  .c0 {
    min-height: 100vh;
    width: 100vw;
  }
}

@media (min-width:768px) {
  .c1 {
    -webkit-flex-wrap: nowrap;
    -ms-flex-wrap: nowrap;
    flex-wrap: nowrap;
    text-align: left;
    -webkit-box-pack: start;
    -webkit-justify-content: flex-start;
    -ms-flex-pack: start;
    justify-content: flex-start;
  }
}

@media (min-width:768px) {
  .c1 > div {
    margin-left: 60px;
  }
}

@media (min-width:768px) {
  .c1 h1 {
    font-size: 1.125rem;
    margin: 0 0 0.625rem;
  }
}

@media (min-width:450px) {
  .c1 h2 {
    font-size: 1.375rem;
  }
}

@media (min-width:768px) {
  .c1 h2 {
    font-size: 1.875rem;
    line-height: 1.54;
  }
}

<body>
    <div>
      <section
        class="c0"
      >
        <div
          class="c1"
        />
      </section>
    </div>
  </body>,
  "container": <div>
    <section
      class="Herostyles__Hero-mes4b5-0 esEXpm"
    >
      <div
        class="Herostyles__HeroInner-mes4b5-1 gFoCpG"
      />
    </section>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`<Hero /> Render component with children prop 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    .c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  font-size: 2rem;
  height: 100%;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 200px 0;
}

.c1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  max-width: 60rem;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  text-align: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0 1.875rem;
}

.c1.--centered > div {
  text-align: center;
  margin: 0;
}

.c1 h1 {
  font-weight: 600;
  font-size: 1rem;
  margin: 1.875rem 0 0.625rem;
  font-weight: 500;
  opacity: 0.8;
}

.c1 h1 a {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c1 h2 {
  font-size: 1.125rem;
}

@media (min-width:768px) {
  .c0 {
    min-height: 100vh;
    width: 100vw;
  }
}

@media (min-width:768px) {
  .c1 {
    -webkit-flex-wrap: nowrap;
    -ms-flex-wrap: nowrap;
    flex-wrap: nowrap;
    text-align: left;
    -webkit-box-pack: start;
    -webkit-justify-content: flex-start;
    -ms-flex-pack: start;
    justify-content: flex-start;
  }
}

@media (min-width:768px) {
  .c1 > div {
    margin-left: 60px;
  }
}

@media (min-width:768px) {
  .c1 h1 {
    font-size: 1.125rem;
    margin: 0 0 0.625rem;
  }
}

@media (min-width:450px) {
  .c1 h2 {
    font-size: 1.375rem;
  }
}

@media (min-width:768px) {
  .c1 h2 {
    font-size: 1.875rem;
    line-height: 1.54;
  }
}

<div>
      <section
        class="c0"
      >
        <div
          class="c1"
        >
          <h1>
            Hello
          </h1>
        </div>
      </section>
    </div>
  </body>,
  "container": <div>
    <section
      class="Herostyles__Hero-mes4b5-0 esEXpm"
    >
      <div
        class="Herostyles__HeroInner-mes4b5-1 gFoCpG"
      >
        <h1>
          Hello
        </h1>
      </div>
    </section>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
