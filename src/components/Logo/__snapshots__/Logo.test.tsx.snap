// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Logo /> Render component 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c1 {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  -webkit-clip: rect(0,0,0,0);
  clip: rect(0,0,0,0);
  white-space: nowrap;
  border: 0;
}

.c1.--focusable:focus,
.c1.--focusable:focus-within {
  position: static;
  width: auto;
  height: auto;
  padding: 0.5rem;
  margin: 0.25rem;
  overflow: visible;
  -webkit-clip: auto;
  clip: auto;
  white-space: normal;
}

.c0 {
  cursor: pointer;
  display: inline-block;
}

<body>
    <div>
      <a
        class="c0"
        href="/"
      >
        <span
          class="c1"
        >
          undefinedundefined
        </span>
        <svg
          class=""
          fill="none"
          height="45"
          width="50"
          xmlns="http://www.w3.org/2000/svg"
        >
          <title>
            undefinedundefined
          </title>
          <path
            d="M43.247 0v45H32.662L12.597 21.021V45H0V0h10.584L30.65 23.979V0h12.598z"
          />
          <rect
            class="dot"
            height="12.857"
            rx="6.429"
            width="12.987"
            x="37.013"
            y="32.143"
          />
        </svg>
      </a>
    </div>
  </body>,
  "container": <div>
    <a
      class="Logostyles__Logo-ztqmk5-0 jbrqWl"
      href="/"
    >
      <span
        class="SrOnlystyles__Tag-sc-1xgrgn4-0 gepsbO"
      >
        undefinedundefined
      </span>
      <svg
        class="Logostyles__Svg-ztqmk5-1 FzJFq"
        fill="none"
        height="45"
        width="50"
        xmlns="http://www.w3.org/2000/svg"
      >
        <title>
          undefinedundefined
        </title>
        <path
          d="M43.247 0v45H32.662L12.597 21.021V45H0V0h10.584L30.65 23.979V0h12.598z"
        />
        <rect
          class="dot"
          height="12.857"
          rx="6.429"
          width="12.987"
          x="37.013"
          y="32.143"
        />
      </svg>
    </a>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`<Logo /> Render component with href prop 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    .c1 {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  -webkit-clip: rect(0,0,0,0);
  clip: rect(0,0,0,0);
  white-space: nowrap;
  border: 0;
}

.c1.--focusable:focus,
.c1.--focusable:focus-within {
  position: static;
  width: auto;
  height: auto;
  padding: 0.5rem;
  margin: 0.25rem;
  overflow: visible;
  -webkit-clip: auto;
  clip: auto;
  white-space: normal;
}

.c0 {
  cursor: pointer;
  display: inline-block;
}

<div>
      <a
        class="c0"
        href="/"
      >
        <span
          class="c1"
        >
          undefinedundefined
        </span>
        <svg
          class=""
          fill="none"
          height="45"
          width="50"
          xmlns="http://www.w3.org/2000/svg"
        >
          <title>
            undefinedundefined
          </title>
          <path
            d="M43.247 0v45H32.662L12.597 21.021V45H0V0h10.584L30.65 23.979V0h12.598z"
          />
          <rect
            class="dot"
            height="12.857"
            rx="6.429"
            width="12.987"
            x="37.013"
            y="32.143"
          />
        </svg>
      </a>
    </div>
  </body>,
  "container": <div>
    <a
      class="Logostyles__Logo-ztqmk5-0 jbrqWl"
      href="/"
    >
      <span
        class="SrOnlystyles__Tag-sc-1xgrgn4-0 gepsbO"
      >
        undefinedundefined
      </span>
      <svg
        class="Logostyles__Svg-ztqmk5-1 FzJFq"
        fill="none"
        height="45"
        width="50"
        xmlns="http://www.w3.org/2000/svg"
      >
        <title>
          undefinedundefined
        </title>
        <path
          d="M43.247 0v45H32.662L12.597 21.021V45H0V0h10.584L30.65 23.979V0h12.598z"
        />
        <rect
          class="dot"
          height="12.857"
          rx="6.429"
          width="12.987"
          x="37.013"
          y="32.143"
        />
      </svg>
    </a>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`<Logo /> Render component with title prop 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    .c1 {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  -webkit-clip: rect(0,0,0,0);
  clip: rect(0,0,0,0);
  white-space: nowrap;
  border: 0;
}

.c1.--focusable:focus,
.c1.--focusable:focus-within {
  position: static;
  width: auto;
  height: auto;
  padding: 0.5rem;
  margin: 0.25rem;
  overflow: visible;
  -webkit-clip: auto;
  clip: auto;
  white-space: normal;
}

.c0 {
  cursor: pointer;
  display: inline-block;
}

<div>
      <a
        class="c0"
        href="/"
      >
        <span
          class="c1"
        >
          Fernando
        </span>
        <svg
          class=""
          fill="none"
          height="45"
          width="50"
          xmlns="http://www.w3.org/2000/svg"
        >
          <title>
            Fernando
          </title>
          <path
            d="M43.247 0v45H32.662L12.597 21.021V45H0V0h10.584L30.65 23.979V0h12.598z"
          />
          <rect
            class="dot"
            height="12.857"
            rx="6.429"
            width="12.987"
            x="37.013"
            y="32.143"
          />
        </svg>
      </a>
    </div>
  </body>,
  "container": <div>
    <a
      class="Logostyles__Logo-ztqmk5-0 jbrqWl"
      href="/"
    >
      <span
        class="SrOnlystyles__Tag-sc-1xgrgn4-0 gepsbO"
      >
        Fernando
      </span>
      <svg
        class="Logostyles__Svg-ztqmk5-1 FzJFq"
        fill="none"
        height="45"
        width="50"
        xmlns="http://www.w3.org/2000/svg"
      >
        <title>
          Fernando
        </title>
        <path
          d="M43.247 0v45H32.662L12.597 21.021V45H0V0h10.584L30.65 23.979V0h12.598z"
        />
        <rect
          class="dot"
          height="12.857"
          rx="6.429"
          width="12.987"
          x="37.013"
          y="32.143"
        />
      </svg>
    </a>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
